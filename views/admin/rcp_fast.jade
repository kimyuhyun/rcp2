extends layout

block content

    div(style='position: fixed; top: 10px; right: 0px; z-index: 99;')
        button(class="w2ui-btn w2ui-btn-blue" onclick="$('#save').trigger('click');") 저장
        br
        button(class="w2ui-btn mt-1" onclick="formClear();") 리셋
        

    div(class='row m-0')
        div(class='offset-md-2 col-12 col-md-4 p-0 ')
            div(id='grid' style='width: 100%; height: 860px;')


        div(class='col-12 col-md-4 p-0')
            div(id='form')
                div(class='w2ui-page page-0')
                    div(class='d-flex flex-row')
                        div(class='w2ui-field w2ui-span2 flex-fill')
                            label 음식명
                            div
                                input(name='title')
                                
                        div(class='w2ui-field w2ui-span2 flex-fill')
                            label 블로거
                            div
                                input(name='writer_idx')
                                
                                
                    div(class='d-flex flex-column')
                        div(class='w2ui-field w2ui-span2 flex-fill')
                            label 종류별
                            div
                                input(name='cate1')
                                
                        div(class='w2ui-field w2ui-span2 flex-fill')
                            label 상황별
                            div
                                input(name='cate2')
                    
                    
                        div(class='w2ui-field w2ui-span2 flex-fill')
                            label 재료별
                            div
                                input(name='cate3')
                                
                        div(class='w2ui-field w2ui-span2 flex-fill')
                            label 방법별
                            div
                                input(name='cate4')
                                
                        div(class='w2ui-field w2ui-span2 flex-fill')
                            label 테마별
                            div
                                input(name='cate5')
                
                    

                div(class='w2ui-buttons')
                    button(class='w2ui-btn' name='reset') 리셋
                    button(class='w2ui-btn w2ui-btn-blue' name='save' id='save') 입력


            form(name="frmPopup", method="post")
                input(type="hidden", name="jaelyo")
                
                
            img(id='rcp_img', style='position: fixed; top:0px; left: 0px; z-index:99; width: 500px; height: 500px; background: #fff; display: none;' onclick='$("#rcp_img").hide();')

            div(id='jaelyo_helper' class='shadow' style='position: absolute; z-index:99; background: #fff; display: none; font-size: 10px;')
                div(class='d-flex flex-row')
                    button(class='btn btn-light btn-sm py-0 me-1' onclick='setJaelyoText("T");') T
                    button(class='btn btn-light btn-sm py-0 me-1' onclick='setJaelyoText("t");') t
                    button(class='btn btn-light btn-sm py-0 me-1' onclick='setJaelyoText("개");') 개
                    button(class='btn btn-light btn-sm py-0 me-1' onclick='setJaelyoText("장");') 장
                    button(class='btn btn-light btn-sm py-0 me-1' onclick='setJaelyoText("컵");') 컵
                    button(class='btn btn-light btn-sm py-0 me-1' onclick='setJaelyoText("대");') 대
                    button(class='btn btn-light btn-sm py-0 me-1' onclick='setJaelyoText("주먹");') 주먹
                    button(class='btn btn-light btn-sm py-0' onclick='setJaelyoText("꼬집");') 꼬집
                
                
                
                
                
                
    //- 들여쓰기 중요함
    script.
        var cate1 = [];
        var cate2 = [];
        var cate3 = [];
        var cate4 = [];
        var cate5 = [];
        var bloger = [];
        var table = 'RCP_tbl';
        var config = {
            grid: {
                url: {
                    get: '/crud/list?table=' + table,
                    remove: '/crud/remove?table=' + table,                    
                },
                recid: 'idx',
                limit: 40,
                recordHeight: 20,
                autoLoad: false,
                name: 'grid',
                show: {
                    selectColumn: true,
                    footer: true,
                    toolbar: true,
                    toolbarDelete: true,
                },
                sortData: [{ field: 'idx', direction: 'DESC' }],
                multiSelect: true,
                multiSearch: true,
                onError:function(e){
                    console.log(e.xhr.responseText);
                },
                onClick: function(event) {
                    if (event.column == null) {
                        return;
                    }

                    var grid = this;
                    var form = w2ui.form;
                    event.onComplete = function () {
                        var sel = grid.getSelection();
                        if (sel.length == 1) {
                            form.recid = sel[0];
                            form.clear();
                            form.record = $.extend(true, {}, grid.get(sel[0]));
                            
                            grid.selectNone();
                                                        
                            console.log(form.record);
                                
                            setTimeout(async function() {
                                await new Promise(function(resolve, reject) {
                                    getcategorys();
                                    resolve();
                                });
                                $("input[name='cate1']").w2field().set({ id: form.record.cate1, text: form.record.cate1 });
                                $("input[name='cate2']").w2field().set({ id: form.record.cate2, text: form.record.cate2 });
                                $("input[name='cate3']").w2field().set({ id: form.record.cate3, text: form.record.cate3 });
                                $("input[name='cate4']").w2field().set({ id: form.record.cate4, text: form.record.cate4 });
                                $("input[name='cate5']").w2field().set({ id: form.record.cate5, text: form.record.cate5 });
                                
                                $("input[name='cate5']").w2field().set({ id: 4, text: '추천'});
                            }, 300);
                            
                            setTimeout(async function() {
                                var blogerName = '';
                                await new Promise(function(resolve, reject) {
                                    blogerName = getBlogers(form.record.writer_idx);
                                    resolve(blogerName);
                                }).then(data => {
                                    blogerName = data;
                                });                                
                                $("input[name='writer_idx']").w2field().set({ id: form.record.writer_idx, text: blogerName });
                            }, 400);
                            
                            
                            for (var i=0;i<=19;i++) {
        						eval("var fileLink = form.record.filename"+i);
        						if (fileLink != '') {
                                    
                                    var show_image = '$("#rcp_img").show();$("#rcp_img").attr("src", "'+fileLink+'");';
                                    
        							$("#filename"+i+"_img").attr("src", fileLink);
        							$("#filename"+i+"_img").attr("onclick", show_image);
                                    
                                    
                                    
                                    
        							$("#filename"+i+"_x").show();
        						} else {
        							$("#filename"+i).val("");
        							$("#filename"+i+"_img").attr("src", "/images/no-img2.png");
        							$("#filename"+i+"_img").attr("onclick", "");
        							$("#filename"+i+"_x").hide();
        						}
        					}
                            
                            form.refresh();
                            $("#save").text("수정");
                        } else {
                            formClear();
                            $("#save").text("입력");
                        }
                    }
                },
                searches: [
                    { field: 'title', caption: '제목', type: 'text' },			//세팅 해줘야함
                ],
                columns: [
                    { field: 'idx', caption: '번호', size: '40px', sortable: true, resizable: true, attr: 'align=center' },	//세팅 해줘야함
                    { field: 'title', caption: '제목', size: '100%', min: 150, sortable: true, resizable: true, attr: 'align=left' },	//세팅 해줘야함
                    { field: 'cate1', caption: '종류별', size: '50px', sortable: true, resizable: true, attr: 'align=center' },	//세팅 해줘야함
                    { field: 'cate2', caption: '상황별', size: '50px', sortable: true, resizable: true, attr: 'align=center' },	//세팅 해줘야함
                    { field: 'cate3', caption: '재료별', size: '50px', sortable: true, resizable: true, attr: 'align=center' },	//세팅 해줘야함
                    { field: 'cate4', caption: '방법별', size: '50px', sortable: true, resizable: true, attr: 'align=center' },	//세팅 해줘야함
                    { field: 'cate5', caption: '테마별', size: '50px', sortable: true, resizable: true, attr: 'align=center' },	//세팅 해줘야함
                ],
            },
            form: {
                name: 'form',
                fields: [
                    { field: 'title', type: 'text', required: true },	//세팅 해줘야함
                    { field: 'writer_idx', type: 'list', required: true },	//세팅 해줘야함
                    { field: 'cate1', type: 'list', required: false },   //세팅 해줘야함
                    { field: 'cate2', type: 'list', required: false },	//세팅 해줘야함
                    { field: 'cate3', type: 'list', required: false },	//세팅 해줘야함
                    { field: 'cate4', type: 'list', required: false },	//세팅 해줘야함
                    { field: 'cate5', type: 'list', required: false },	//세팅 해줘야함
                ],
                actions: {
                    reset: function () {
                        formClear();
                        $("#save").text("입력");
                    },
                    save: function () {
                        var errors = this.validate();
                        if (errors.length > 0) {
                            return;
                        }

                        //- 세팅해줘야함.
                        this.record.table = table;
                        this.record.cate1 = this.record.cate1['text'];
                        this.record.cate2 = this.record.cate2['text'];
                        this.record.cate3 = this.record.cate3['text'];
                        this.record.cate4 = this.record.cate4['text'];
                        this.record.cate5 = this.record.cate5['text'];
                        
                        this.record.writer_idx = this.record.writer_idx['id'];
                        //
                        
                        //- console.log(this.record);return;
                        
                        var formData = new FormData();
                        var self = this;
                        for (var key in this.record) {
                            formData.append(key, self.record[key]);                            
                        }
                        
                        axios.post('/crud/write', formData).then(function(res) {
                            console.dir(res.data);
                            $("#save").text("입력");
                            //- w2alert(res.data.msg);
                            if (res.data.code == 1) {
                                setTimeout(function() {
                                    w2ui.grid.reload();
                                    formClear();
                                }, 300);
                            } else if (res.data.code == 2) {    //수정
                                setTimeout(function() {
                                    w2ui.grid.set(res.data.record.idx, res.data.record, false);
                                    formClear();
                                }, 300);
                            }
                            $("#rcp_img").hide();
                        });
                    },
                    check_jaelyo: function() {
                        var frmPop = document.frmPopup;
                        var url = '/rcp/check_jaelyo';
                        window.open('', 'popupView', 'width=400, height=800, menubar=no, status=no, toolbar=no, left=0, top=0');

                        frmPop.action = url;
                        frmPop.target = 'popupView';
                        frmPop.jaelyo.value = w2ui.form.record.jaelyo;
                        frmPop.submit();
                        
                    },
                    
                },
            },
            onError: function(e) {
                console.log(e.xhr.responseText);
            },
        };
        
        
        
        $(function () {
            $('#grid').w2grid(config.grid);
            $('#form').w2form(config.form);
            
            $('#jaelyo').mousedown(function(event) {
                if (event.which == 1) {
                    $("#jaelyo_helper").css("top", event.pageY);
                    $("#jaelyo_helper").css("left", event.pageX + 20);
                    
                    $("#jaelyo_helper").show();
                }
            });
            
            //카테고리 불러오기
            axios.get('/crud/iterator?table=CATEGORYS_tbl&sort1=sort1 ASC').then(function(res) {
                for (obj of res.data) {
                    if (obj.gbn == 'cate1') {
                        cate1.push(obj.name1);
                    } else if (obj.gbn == 'cate2') {
                        cate2.push(obj.name1);
                    } else if (obj.gbn == 'cate3') {
                        cate3.push(obj.name1);
                    } else if (obj.gbn == 'cate4') {
                        cate4.push(obj.name1);
                    } else if (obj.gbn == 'cate5') {
                        cate5.push(obj.name1);
                    }
                }                
                getcategorys();
                                
            }).catch(function(err){
                console.log(err);
            });
            
            //블로거 불러오기
            axios.get('/crud/iterator?table=BLOGER_tbl').then(function(res) {                
                for (obj of res.data) {
                    bloger.push({
                        id: obj.idx,
                        text: obj.name1
                    });
                }                
                getBlogers();
                                
            }).catch(function(err){
                console.log(err);
            });
        });
        function getcategorys() {
            $("input[name='cate1']").w2field('list', { items: cate1 });
            $("input[name='cate2']").w2field('list', { items: cate2 });
            $("input[name='cate3']").w2field('list', { items: cate3 });
            $("input[name='cate4']").w2field('list', { items: cate4 });
            $("input[name='cate5']").w2field('list', { items: cate5 });
        }
        function getBlogers(id) {
            $("input[name='writer_idx']").w2field('list', { items: bloger });
            
            if (id != null) {
                for (obj of bloger) {
                    if (obj.id == id) {
                        return obj.text;
                    }
                }
            }
            
        }
        function formClear() {
            setTimeout(function() {
                getcategorys();
                getBlogers();
            }, 200);
            
        	$("#jaelyo").val("");
        	w2ui.form.clear();
        	for (var i=0;i<=19;i++) {
        		$("#filename"+i).val("");
        		$("#filename"+i+"_img").attr("src", "/images/no-img2.png");
        		$("#filename"+i+"_img").attr("onclick", "");
        		$("#filename"+i+"_x").hide();
        	}
        	w2ui.form.refresh();
        }
                
        function dragEnter(i, e) {
            console.log(i, "드래그 요소가 들어왔을떄", e);
            $("#filename"+i+"_img").addClass("bg-dark");
        }
        function dragLeave(i, e) {
            console.log(i, "드래그 요소가 나갔을때");
        	$("#filename"+i+"_img").addClass("img-thumbnail");
        	$("#filename"+i+"_img").removeClass("bg-dark");
        }
        function dragOver(e) {
        	e.stopPropagation();
            e.preventDefault();
        }
        function drop(i, e) {
            console.log("드래그한 항목을 떨어뜨렸을때", e);
            e.preventDefault();
            var file = e.dataTransfer.files[0];
            var formData = new FormData();
        	formData.append("upload_file", file, file.name);
        	axios.post("http://images.lazulsoft.com/file_upload", formData).then(function(res) {
        		console.dir(res.data);
                eval("w2ui.form.record.filename"+i+"='"+res.data.url+"';");
        		$("#filename"+i+"_img").attr("src", res.data.url);
        		$("#filename"+i+"_img").attr("onclick", "window.open('"+res.data.url+"')");
        		$("#filename"+i+"_x").show();
                $("#filename"+i+"_img").show();
        		$("#filename"+i+"_img").addClass("img-thumbnail");
        		$("#filename"+i+"_img").removeClass("bg-dark");
            }).catch(function(err){
                console.log(err);
            });
        }
        function deleteImage(i) {
        	//- var path = $("#filename"+i+"_img").attr("src");
            //- console.log(path);
        	//- var params = new URLSearchParams();
        	//- params.append('filename', path);
        	//- axios.post('/crud/file_delete', params).then(function(res) {
        	//- 	console.dir(res.data);
        	//- 	if (res.data.code == 1) {
        	//- 		eval("w2ui.form.record.filename"+i+"='';");
        	//- 		$("#filename"+i+"_img").attr("src", "/images/no-img2.png");
        	//- 		$("#filename"+i+"_img").attr("onclick", "");
        	//- 		$("#filename"+i+"_x").hide();
        	//- 	}
        	//- });
            if (confirm("삭제하시겠습니까?")) {
                eval("w2ui.form.record.filename"+i+"='';");
                $("#filename"+i+"_img").attr("src", "/images/no-img2.png");
                $("#filename"+i+"_img").attr("onclick", "");
                $("#filename"+i+"_x").hide();
            }
        }
        function setJaelyoText(txt) {
            var element     =         document.getElementById('jaelyo');
            var strOriginal =         element.value;
            var iStartPos   =         element.selectionStart;
            var iEndPos     =         element.selectionEnd;
            var strFront    =         "";
            var strEnd      =         "";

            if (iStartPos == iEndPos) {
                strFront = strOriginal.substring(0, iStartPos);
                strEnd = strOriginal.substring(iStartPos, strOriginal.length);
            } else {
                return;    
            }
            element.value = strFront + txt + strEnd;
        }
