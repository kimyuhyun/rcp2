extends layout

block content

    div(style='position: fixed; top: 65px; right: 0px; z-index: 99;')
        button(class="w2ui-btn w2ui-btn-blue" onclick="$('#save').trigger('click');") 저장
        br
        button(class="w2ui-btn mt-1" onclick="formClear();") 리셋
        

    div(class='row mt-4')
        div(class='col-12 col-md-3')
            div(id='grid' style='width: 100%; height: 730px;')


        div(class='col-12 col-md-9')
            div(id='form')
                div(class='w2ui-page page-0')
                    div(class='d-flex flex-row')
                        div(class='w2ui-field w2ui-span2 flex-fill')
                            label 음식명
                            div
                                input(name='title')
                                
                        div(class='w2ui-field w2ui-span2 flex-fill')
                            label 블로거
                            div
                                input(name='writer_idx')
                                
                                
                    div(class='d-flex flex-row')
                        div(class='w2ui-field w2ui-span2 flex-fill')
                            label 종류별
                            div
                                input(name='cate1')
                                
                        div(class='w2ui-field w2ui-span2 flex-fill')
                            label 상황별
                            div
                                input(name='cate2')
                    
                    
                        div(class='w2ui-field w2ui-span2 flex-fill')
                            label 재료별
                            div
                                input(name='cate3')
                                
                        div(class='w2ui-field w2ui-span2 flex-fill')
                            label 방법별
                            div
                                input(name='cate4')
                                
                        div(class='w2ui-field w2ui-span2 flex-fill')
                            label 테마별
                            div
                                input(name='cate5')
                                
                    div(class='d-flex flex-row mt-4')
                        div(class='flex-column flex-fill')
                            div(class='w2ui-field w2ui-span2')
                                label 재료
                                div
                                    textarea(name='jaelyo', rows='7', style='font-size: 14px;')
                                    button(name='check_jaelyo', class='w2ui-btn w2ui-btn-red w-100 m-0') 미리보기
                            
                            

                    div(class='d-flex flex-row mt-4')
                        div(class='flex-column flex-fill')
                            - var title = '';
                            - for (var i=0;i<=9;i++)
                                if i == 0
                                    - title = '대표사진'
                                else
                                    - title = '순서' + i
                                div(class='w2ui-field w2ui-span2')
                                    label #{title}
                                    div(class='d-flex flex-row')
                                        div(class='p-0 me-1', style='position: relative; min-width: 80px; height: 80px;', onDragEnter='dragEnter(#{i}, event)', onDragLeave='dragLeave(#{i}, event)', onDragOver='dragOver(event)', onDrop='drop(#{i}, event)')
                                            label(for='file-input#{i}')
                                                img(id='filename#{i}_img', src='/images/no-img2.png' class='img-thumbnail' style='width: 80px; height: 80px;')
                                            img(id='filename#{i}_x', onclick='deleteImage(#{i})', src='/images/photo_x.png' class='X', style='position: absolute; cursor: pointer; top: -10px; right: -9px; display: none; width: 25px; height: 25px;')
                                        textarea(name='memo#{i}', style='width: 100%; height: 80px;')
                                    
                        div(class='flex-column flex-fill')
                            - for (var i=10;i<=19;i++)
                                div(class='w2ui-field w2ui-span2')
                                    label 순서#{i}
                                    div(class='d-flex flex-row')
                                        div(class='p-0 me-1', style='position: relative; min-width: 80px; height: 80px;', onDragEnter='dragEnter(#{i}, event)', onDragLeave='dragLeave(#{i}, event)', onDragOver='dragOver(event)', onDrop='drop(#{i}, event)')
                                            label(for='file-input#{i}')
                                                img(id='filename#{i}_img', src='/images/no-img2.png' class='img-thumbnail' style='width: 80px; height: 80px;')
                                            img(id='filename#{i}_x', onclick='deleteImage(#{i})', src='/images/photo_x.png' class='X', style='position: absolute; cursor: pointer; top: -10px; right: -9px; display: none; width: 25px; height: 25px;')
                                        textarea(name='memo#{i}', style='width: 100%; height: 80px;')
                    

                div(class='w2ui-buttons')
                    button(class='w2ui-btn' name='reset') 리셋
                    button(class='w2ui-btn w2ui-btn-blue' name='save' id='save') 입력


            form(name="frmPopup", method="post")
                input(type="hidden", name="jaelyo")

    //- 들여쓰기 중요함
    script.
        var cate1 = [];
        var cate2 = [];
        var cate3 = [];
        var cate4 = [];
        var cate5 = [];
        var bloger = [];
        var table = 'RCP_tbl';
        var config = {
            grid: {
                url: {
                    get: '/crud/list?table=' + table,
                    remove: '/crud/remove?table=' + table,                    
                },
                recid: 'idx',
                limit: 20,
                recordHeight: 40,
                autoLoad: false,
                name: 'grid',
                show: {
                    selectColumn: true,
                    footer: true,
                    toolbar: true,
                    toolbarDelete: true,
                },
                sortData: [{ field: 'idx', direction: 'DESC' }],
                multiSelect: true,
                multiSearch: true,
                onError:function(e){
                    console.log(e.xhr.responseText);
                },
                onClick: function(event) {
                    if (event.column == null) {
                        return;
                    }

                    var grid = this;
                    var form = w2ui.form;
                    event.onComplete = function () {
                        var sel = grid.getSelection();
                        if (sel.length == 1) {
                            form.recid = sel[0];
                            form.clear();
                            form.record = $.extend(true, {}, grid.get(sel[0]));
                            
                            grid.selectNone();
                                                        
                            console.log(form.record);
                                
                            setTimeout(async function() {
                                await new Promise(function(resolve, reject) {
                                    getcategorys();
                                    resolve();
                                });
                                $("input[name='cate1']").w2field().set({ id: form.record.cate1, text: form.record.cate1 });
                                $("input[name='cate2']").w2field().set({ id: form.record.cate2, text: form.record.cate2 });
                                $("input[name='cate3']").w2field().set({ id: form.record.cate3, text: form.record.cate3 });
                                $("input[name='cate4']").w2field().set({ id: form.record.cate4, text: form.record.cate4 });
                                $("input[name='cate5']").w2field().set({ id: form.record.cate5, text: form.record.cate5 });    
                            }, 300);
                            
                            setTimeout(async function() {
                                var blogerName = '';
                                await new Promise(function(resolve, reject) {
                                    blogerName = getBlogers(form.record.writer_idx);
                                    resolve(blogerName);
                                }).then(data => {
                                    blogerName = data;
                                });                                
                                $("input[name='writer_idx']").w2field().set({ id: form.record.writer_idx, text: blogerName });
                            }, 400);
                            
                            
                            for (var i=0;i<=19;i++) {
        						eval("var fileLink = form.record.filename"+i);
        						if (fileLink != '') {
        							$("#filename"+i+"_img").attr("src", fileLink);
        							$("#filename"+i+"_img").attr("onclick", "window.open('"+fileLink+"')");
        							$("#filename"+i+"_x").show();
        						} else {
        							$("#filename"+i).val("");
        							$("#filename"+i+"_img").attr("src", "/images/no-img2.png");
        							$("#filename"+i+"_img").attr("onclick", "");
        							$("#filename"+i+"_x").hide();
        						}
        					}
                            
                            form.refresh();
                            $("#save").text("수정");
                        } else {
                            formClear();
                            $("#save").text("입력");
                        }
                    }
                },
                searches: [
                    { field: 'title', caption: '제목', type: 'text' },			//세팅 해줘야함
                    { field: 'name1', caption: '작성자', type: 'text' },			//세팅 해줘야함
                ],
                columns: [
                    { field: 'idx', caption: '번호', size: '50px', sortable: true, resizable: true, attr: 'align=center' },	//세팅 해줘야함
                    { field: 'filename0', caption: '썸네일', size: '50px', sortable: true, resizable: true, style: 'padding: 0px;',	//세팅 해줘야함
                        render: function(record) {
                            if (record.filename0 != null && record.filename0 != '') {
                                return '<img src="' + record.filename0 + '" style="width: 50px; height: 40px;" />';
                            }
                        }
                    },
                    { field: 'title', caption: '제목', size: '100%', min: 250, sortable: true, resizable: true, attr: 'align=left' },	//세팅 해줘야함
                ],
            },
            form: {
                name: 'form',
                fields: [
                    { field: 'title', type: 'text', required: true },	//세팅 해줘야함
                    { field: 'jaelyo', type: 'textarea', required: true },	//세팅 해줘야함
                    { field: 'writer_idx', type: 'list', required: true },	//세팅 해줘야함
                    { field: 'cate1', type: 'list', required: false },   //세팅 해줘야함
                    { field: 'cate2', type: 'list', required: false },	//세팅 해줘야함
                    { field: 'cate3', type: 'list', required: false },	//세팅 해줘야함
                    { field: 'cate4', type: 'list', required: false },	//세팅 해줘야함
                    { field: 'cate5', type: 'list', required: false },	//세팅 해줘야함
                    
                    { field: 'memo0', type: 'textarea', required: true },
                    { field: 'memo1', type: 'textarea', required: false },
                    { field: 'memo2', type: 'textarea', required: false },
                    { field: 'memo3', type: 'textarea', required: false },
                    { field: 'memo4', type: 'textarea', required: false },
                    { field: 'memo5', type: 'textarea', required: false },
                    { field: 'memo6', type: 'textarea', required: false },
                    { field: 'memo7', type: 'textarea', required: false },
                    { field: 'memo8', type: 'textarea', required: false },
                    { field: 'memo9', type: 'textarea', required: false },
                    { field: 'memo10', type: 'textarea', required: false },
                    { field: 'memo11', type: 'textarea', required: false },
                    { field: 'memo12', type: 'textarea', required: false },
                    { field: 'memo13', type: 'textarea', required: false },
                    { field: 'memo14', type: 'textarea', required: false },
                    { field: 'memo15', type: 'textarea', required: false },
                    { field: 'memo16', type: 'textarea', required: false },
                    { field: 'memo17', type: 'textarea', required: false },
                    { field: 'memo18', type: 'textarea', required: false },
                    { field: 'memo19', type: 'textarea', required: false },
                ],
                actions: {
                    reset: function () {
                        formClear();
                        $("#save").text("입력");
                    },
                    save: function () {
                        var errors = this.validate();
                        if (errors.length > 0) {
                            return;
                        }

                        //- 세팅해줘야함.
                        this.record.table = table;
                        this.record.cate1 = this.record.cate1['text'];
                        this.record.cate2 = this.record.cate2['text'];
                        this.record.cate3 = this.record.cate3['text'];
                        this.record.cate4 = this.record.cate4['text'];
                        this.record.cate5 = this.record.cate5['text'];
                        
                        this.record.writer_idx = this.record.writer_idx['id'];
                        //
                        
                        var formData = new FormData();
                        var self = this;
                        for (var key in this.record) {
                            formData.append(key, self.record[key]);                            
                        }
                        
                        axios.post('/crud/write', formData).then(function(res) {
                            console.dir(res.data);
                            $("#save").text("입력");
                            w2alert(res.data.msg);
                            if (res.data.code == 1) {
                                setTimeout(function() {
                                    w2ui.grid.reload();
                                    formClear();
                                }, 300);
                            } else if (res.data.code == 2) {    //수정
                                setTimeout(function() {
                                    w2ui.grid.set(res.data.record.idx, res.data.record, false);
                                    formClear();
                                }, 300);
                            }
                            
                        });
                    },
                    check_jaelyo: function() {
                        var frmPop = document.frmPopup;
                        var url = '/rcp/check_jaelyo';
                        window.open('', 'popupView', 'width=400, height=800, menubar=no, status=no, toolbar=no, left=0, top=0');

                        frmPop.action = url;
                        frmPop.target = 'popupView';
                        frmPop.jaelyo.value = w2ui.form.record.jaelyo;
                        frmPop.submit();
                        
                    },
                    
                },
            },
            onError: function(e) {
                console.log(e.xhr.responseText);
            },
        };
        
        
        
        $(function () {
            $('#grid').w2grid(config.grid);
            $('#form').w2form(config.form);
            
            //카테고리 불러오기
            axios.get('/crud/iterator?table=CATEGORYS_tbl').then(function(res) {
                for (obj of res.data) {
                    if (obj.gbn == 'cate1') {
                        cate1.push(obj.name1);
                    } else if (obj.gbn == 'cate2') {
                        cate2.push(obj.name1);
                    } else if (obj.gbn == 'cate3') {
                        cate3.push(obj.name1);
                    } else if (obj.gbn == 'cate4') {
                        cate4.push(obj.name1);
                    } else if (obj.gbn == 'cate5') {
                        cate5.push(obj.name1);
                    }
                }                
                getcategorys();
                                
            }).catch(function(err){
                console.log(err);
            });
            
            //블로거 불러오기
            axios.get('/crud/iterator?table=BLOGER_tbl').then(function(res) {                
                for (obj of res.data) {
                    bloger.push({
                        id: obj.idx,
                        text: obj.name1
                    });
                }                
                getBlogers();
                                
            }).catch(function(err){
                console.log(err);
            });
        });
        function getcategorys() {
            $("input[name='cate1']").w2field('list', { items: cate1 });
            $("input[name='cate2']").w2field('list', { items: cate2 });
            $("input[name='cate3']").w2field('list', { items: cate3 });
            $("input[name='cate4']").w2field('list', { items: cate4 });
            $("input[name='cate5']").w2field('list', { items: cate5 });
        }
        function getBlogers(id) {
            $("input[name='writer_idx']").w2field('list', { items: bloger });
            
            if (id != null) {
                for (obj of bloger) {
                    if (obj.id == id) {
                        return obj.text;
                    }
                }
            }
            
        }
        function formClear() {
            setTimeout(function() {
                getcategorys();
                getBlogers();
            }, 200);
            
        	$("#jaelyo").val("");
        	w2ui.form.clear();
        	for (var i=0;i<=19;i++) {
        		$("#filename"+i).val("");
        		$("#filename"+i+"_img").attr("src", "/images/no-img2.png");
        		$("#filename"+i+"_img").attr("onclick", "");
        		$("#filename"+i+"_x").hide();
        	}
        	w2ui.form.refresh();
        }
                
        function dragEnter(i, e) {
            console.log(i, "드래그 요소가 들어왔을떄", e);
            $("#filename"+i+"_img").addClass("bg-dark");
        }
        function dragLeave(i, e) {
            console.log(i, "드래그 요소가 나갔을때");
        	$("#filename"+i+"_img").addClass("img-thumbnail");
        	$("#filename"+i+"_img").removeClass("bg-dark");
        }
        function dragOver(e) {
        	e.stopPropagation();
            e.preventDefault();
        }
        function drop(i, e) {
            console.log("드래그한 항목을 떨어뜨렸을때", e);
            e.preventDefault();
            var file = e.dataTransfer.files[0];
            var formData = new FormData();
        	formData.append("upload_file", file, file.name);
        	axios.post("http://images.lazulsoft.com/file_upload", formData).then(function(res) {
        		console.dir(res.data);
                eval("w2ui.form.record.filename"+i+"='"+res.data.url+"';");
        		$("#filename"+i+"_img").attr("src", res.data.url);
        		$("#filename"+i+"_img").attr("onclick", "window.open('"+res.data.url+"')");
        		$("#filename"+i+"_x").show();
                $("#filename"+i+"_img").show();
        		$("#filename"+i+"_img").addClass("img-thumbnail");
        		$("#filename"+i+"_img").removeClass("bg-dark");
            }).catch(function(err){
                console.log(err);
            });
        }
        function deleteImage(i) {
        	//- var path = $("#filename"+i+"_img").attr("src");
            //- console.log(path);
        	//- var params = new URLSearchParams();
        	//- params.append('filename', path);
        	//- axios.post('/crud/file_delete', params).then(function(res) {
        	//- 	console.dir(res.data);
        	//- 	if (res.data.code == 1) {
        	//- 		eval("w2ui.form.record.filename"+i+"='';");
        	//- 		$("#filename"+i+"_img").attr("src", "/images/no-img2.png");
        	//- 		$("#filename"+i+"_img").attr("onclick", "");
        	//- 		$("#filename"+i+"_x").hide();
        	//- 	}
        	//- });
            eval("w2ui.form.record.filename"+i+"='';");
            $("#filename"+i+"_img").attr("src", "/images/no-img2.png");
            $("#filename"+i+"_img").attr("onclick", "");
            $("#filename"+i+"_x").hide();
        }
